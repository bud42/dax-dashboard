=======================================TODO:


good step by step on dashboard
https://medium.com/analytics-vidhya/building-a-dashboard-app-using-plotlys-dash-a-complete-guide-from-beginner-to-pro-e7657a4eb707


try using persistence with various graphs
https://dash.plotly.com/persistence

try using basic auth or through flask. probably need to go out to flask to figure out who is logged in
https://community.plotly.com/t/get-username-for-authenticated-user-for-basic-auth/13613/5
https://github.com/RafaelMiquelino/dash-flask-login
https://stackoverflow.com/questions/51639020/python-dash-basic-auth-get-username-in-app


eventually ldap authentication:
https://stackoverflow.com/questions/60585165/how-to-achieve-ldap-authentication-for-dash-plotly-app



more about urls link location:
https://dash.plotly.com/urls

multi page app with bootstrap navbar
https://towardsdatascience.com/create-a-multipage-dash-application-eceac464de91
https://towardsdatascience.com/beginners-guide-to-building-a-multi-page-dashboard-using-dash-5d06dbfc7599

tabs and links and locations...
https://community.plotly.com/t/combining-dcc-tabs-and-dcc-location/27831/6




# what you're really saving is the settings, so maybe that should get saved
# to a file and then we refresh the data if the settings have changed when
# we go to load a report?
# should we return immediately with a display of the progress? probably
# but then when do we reload the qa data?

# currently only data source is XNAT

# we have two levels of filtering.
# 1st level is when we query xnat, we only want to include relevant
# projects and relevant types (the fewer projects and fewer proctypes, the
# faster the query), filtering proctype improves performance moreso than
# filtering by project.

# 2nd level is based on dropdowns

# the 1st level should be liberal enough to include most projects a user would
# want. the 2nd level should be what the user needs on a daily basis, i.e.
# active QA projects.


#ALL_MY_PROJECTS = [
#    'NewhouseCC', 'R21Perfusion', 'TAYLOR_DepMIND', 'NewhouseMDDHx', 'CHAMP',
#    'ACOBA', 'CHANGES', 'NIC', 'REMBRANDT', 'TAYLOR_CAARE']

#ACTIVE_PROJECTS = ['CHAMP', 'CHANGES', 'NIC', 'REMBRANDT']

#TEST_PROJECTS = ['REMBRANDT']

#ALL_PROCTYPES = [
#    'Multi_Atlas_v2', 'biscuit_fs_v2', 'FMRIQA_v4', 'Multi_Atlas_v3',
#    'RWML_v1', 'ASHS_v1', 'BrainAgeGap_v2', 'dtiQA_rpe_v7', 'dtiQA_synb0_v7',
#    'dtiQA_v6', 'EDATQA_v1', 'FS6_v1', 'RSFC_CONN_v1', 'slant_v1',
#    'Temporal_Lobe_v3']

#ACTIVE_PROCTYPES = [
#    'biscuit_fs_v2', 'FMRIQA_v4', 'Multi_Atlas_v3', 'BrainAgeGap_v2',
#    'dtiQA_rpe_v7', 'dtiQA_synb0_v7', 'EDATQA_v1', 'FS6_v1', 'RSFC_CONN_v1',
#    'slant_v1']

#TEST_PROCTYPES = [
#    'FMRIQA_v4', 'Multi_Atlas_v3', 'BrainAgeGap_v2', 'struct_preproc',
#    'EDATQA_v1', 'FS6_v1', 'LST_v1', 'struct_preproc_v1']

#ALL_SCANTYPES = ['T1', 'DTI', 'FLAIR', 'fMRI_Resting']
#ACTIVE_SCANTYPES = ['T1', 'DTI', 'FLAIR', 'fMRI_Resting']
#TEST_SCANTYPES = ['T1', 'FLAIR', 'fMRI_Resting']

# change this to change which list of projects to use by default
#PROJ_LIST = ACTIVE_PROJECTS



# ASSR_STATUS_MAP = {
#     'Passed': 'P',
#     'Good': 'P',
#     'Passed with edits': 'P',
#     'Questionable': 'P',
#     'Failed': 'F',
#     'Bad': 'F',
#     'Needs QA': 'Q',
#     'Do Not Run': 'N'}


# SCAN_STATUS_MAP = {
#     'usable': 'P',
#     'questionable': 'Q',
#     'unusable': 'F'}

#QA_COLS = ['SESSION', 'PROJECT', 'DATE', 'TYPE', 'STATUS']




#ASSR_RENAME = {
#    'ID': 'ID',
#    'label': 'LABEL',
#    'project': 'PROJECT',
#    'proc:genprocdata/proctype': 'PROCTYPE'}


# SCAN_URI = '/REST/experiments?xsiType=xnat:imagesessiondata\
# &columns=\
# ID,\
# label,\
# project,\
# URI,\
# subject_label,\
# xnat:imagesessiondata/acquisition_site,\
# xnat:imagescandata/id,\
# xnat:imagescandata/type,\
# xnat:imagescandata/quality,\
# xnat:imagesessiondata/date'

#SCAN_RENAME = {
#    'ID': 'ID',
#    'label': 'SESSION',
#    'project': 'PROJECT',
#    'xnat:imagescandata/id': 'SCANID',
#    'xnat:imagescandata/type': 'SCANTYPE'}
